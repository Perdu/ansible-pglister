---

- name: 'Install pgbackrest'
  apt:
    name: 'pgbackrest'
    state: 'latest'

# Not using `notify: 'restart postgresql'` as we need it restarted right
# after the task to then run `check`.
- name: 'Drop pgbackrest config'
  copy:
    src: 'pgbackrest.conf'
    dest: '/etc/pgbackrest.conf'
    owner: 'postgres'
    group: 'postgres'
    mode: 0640
  register: config

- name: 'Run first backup procedure'
  command: pgbackrest stanza-create --stanza=main
  become: true
  become_user: 'postgres'
  when: config is changed

- name: 'Adapt postgres configuration'
  lineinfile:
    path: '/etc/postgresql/12/main/conf.d/spi-pg.conf'
    line: '{{ item.line }}'
    regex: '{{ item.regex }}'
  loop:
    - {line: 'archive_mode = on', regex: '^archive_mode'}
    - {line: "archive_command = 'pgbackrest --stanza=main archive-push %p'", regex: '^archive_command'}
  register: config_archive

- name: 'Restart postgresql'
  service:
    name: 'postgresql@12-main'
    state: 'restarted'
  when: config is changed or config_archive is changed

- name: 'Check first backup run is correct'
  command: pgbackrest --stanza=main check
  become: true
  become_user: 'postgres'
  when: config is changed or config_archive is changed

- name: 'Setup pgbackrest crontab'
  cron:
    state: 'present'
    name: 'pg-backup'
    user: 'postgres'
    day: '*/7'
    hour: '0'
    minute: '0'
    job: '/usr/bin/pgbackrest --stanza=main --type=full backup'
