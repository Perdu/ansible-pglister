---
- name: 'Install ACME packages'
  package:
    name:
      - 'certbot'
      - 'ssl-cert'
    state: 'latest'

# Ensure a cert is always present using the ssl-cert package so that
# processes can start before a proper cert is generated.
- name: 'Find existing certificates'
  find:
    path: '{{ le_cert_dir }}'
    pattern: '{{ ansible_host }}.pem'
    follow: true
  register: le_cert

- name: 'Ensure a cert is present'
  file:
    src: '/etc/ssl/{{ item.src }}'
    dest: '{{ item.dest }}'
    state: 'link'
  loop:
    - { src: 'certs/ssl-cert-snakeoil.pem', dest: '{{ le_cert_path }}' }
    - { src: 'private/ssl-cert-snakeoil.key', dest: '{{ le_key_path }}' }
  when: le_cert.matched == 0
  notify: 'ensure certificate'

- name: 'Update certificate if domains list has changed'
  block:
  - name: 'Verify if LE domains list has changed'
    shell: grep '^domains\s*=.*{{ item }}.*' /etc/letsencrypt/{{ ansible_host }}.ini
    loop: '{{ le_domains }}'
    register: presence
    failed_when: presence.rc == 1
  rescue:
  - name: 'Delete previous cert to force certbot to create one with the new set of domains'
    command: >-
      certbot delete
        --cert-name {{ ansible_host }}
    ignore_errors: true
  - name: 'Update LE certificate because domains list has changed'
    # for some reason, "notify: 'ensure certificate'" doesn't work here
    vars:
      additional_options: '--expand --force-renewal'
    include_tasks: 'run_acme_client.yml'

- name: 'Create LE webroot'
  file:
    path: '{{ le_webroot }}/.well-known/acme-challenge'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: 'Ensure LE folder exists'
  file:
    path: '/etc/letsencrypt'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0751'

- name: 'Add LE crontab'
  cron:
    state: 'present'
    name: 'certbot-renewal'
    user: 'root'
    minute: '0'
    hour: '1'  # Every day at night
    job: 'certbot renew --quiet --webroot-path /srv/letsencrypt/'

- name: 'Find existing files in {{ le_deploy_hooks_path }}'
  find:
    paths: '{{ le_deploy_hooks_path }}'
    recurse: true
  ignore_errors: true
  register: files

# Ansible is lacking an 'empty' state, see
# https://github.com/ansible/ansible/issues/18910
# This directory is going to be filled up again by other roles
- name: 'Cleanup LE post-hook path'
  file:
    path: '{{ le_deploy_hooks_path }}'
    state: 'absent'
    owner: 'root'
    group: 'root'
    mode: '0750'
  when: files.matched != 0

- name: 'Create LE post-hook path'
  file:
    path: '{{ le_deploy_hooks_path }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0750'

- name: 'Drop LE post-hook script'
  template:
    src: 'deploy-hook.sh.j2'
    dest: '/usr/local/bin/le-deploy-hook.sh'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: 'Ensure hooks work after renewal'
  file:
    state: 'link'
    src: '/usr/local/bin/le-deploy-hook.sh'
    dest: '/etc/letsencrypt/renewal-hooks/deploy/le-deploy-hook.sh'
