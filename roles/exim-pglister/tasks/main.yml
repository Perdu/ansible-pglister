---
- name: Ensure exim is installed.
  package:
    name: '{{ exim_package }}'
    state: 'present'

- name: Copy exim configuration file
  template:
    src: 'update-exim4.conf.conf.j2'
    dest: '/etc/exim4/update-exim4.conf.conf'
    owner: 'root'
    group: 'root'
    mode: '644'

- name: generate exim4 config
  command:
    cmd: '/usr/sbin/update-exim4.conf -o /etc/exim4/exim4.conf'
  become: true

- name: Set permissions of exim4.conf
  file:
    path: '/etc/exim4/exim4.conf'
    mode: '640'
    owner: 'root'
    group: 'Debian-exim'

- name: add password for smarthost, if exists
  lineinfile:
    path: '/etc/exim4/passwd.client'
    line: '{{ smtp_relay_password }}'
  when: smtp_relay_password is defined

- name: Insert config for pglister (1/3)
  blockinfile:
    path: '{{ exim_configuration_file }}'
    insertafter: 'begin transports'
    block: |
      pglister_pipe:
        driver = pipe
        command = /srv/pglister/local/web/pglister/bin/python /srv/pglister/local/bin/inject.py -s $sender_address -d $local_part$local_part_suffix@$domain -m $header_message-id:
        #ignore_status
        temp_errors = *
        return_output = false
        freeze_exec_fail = true
        log_defer_output = true
        log_output = true
        headers_remove = List-Unsubscribe:List-Owner:List-Post:List-Subscribe:List-Help:List-Id:List-Archive
        #log_fail_output = true
        umask = 022
        environment =
        user = Debian-exim
        message_prefix =

- name: Insert config for pglister (2/3)
  lineinfile:
    path: '{{ exim_configuration_file }}'
    regex: 'domainlist local_domains ='
    line: "domainlist local_domains = @ : ${lookup pgsql{select domain from domains where domain='${quote_pgsql:$domain}'} {$value}}"

- name: Insert config for pglister (3/3)
  lineinfile:
    path: '{{ exim_configuration_file }}'
    insertafter: 'hostlist relay_from_hosts ='
    line: 'hide pgsql_servers = localhost/{{ database_name }}/{{ database_user }}/{{ database_password }}'

- name: Restart exim.
  service:
    name: '{{ exim_daemon }}'
    state: 'restarted'
    enabled: 'yes'
