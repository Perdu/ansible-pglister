---
- name: 'Install required packages'
  package:
    state: 'present'
    name:
      - 'python3'
      - 'git'
      - 'libapache2-mod-wsgi-py3'
      - 'python3-pip'
      - 'python3-psycopg2'
      - 'python3-virtualenv'
      - 'virtualenv'
      - 'postgresql-contrib'
  when: not redeploy

- name: 'Create database'
  community.postgresql.postgresql_db:
    name: '{{ database_name }}'
  become: true
  become_user: 'postgres'
  when: not redeploy

- name: 'Create role for database_user'
  community.postgresql.postgresql_user:
    name: '{{ database_user }}'
    password: '{{ database_password }}'
  become: true
  become_user: 'postgres'
  when: not redeploy

- name: 'Grant permissions to database'
  community.postgresql.postgresql_query:
    query: '{{ item }}'
    db: '{{ database_name }}'
  loop:
    - 'GRANT ALL ON DATABASE {{ database_name }} TO "{{ database_user }}";'
    - 'GRANT CREATE ON SCHEMA public TO "{{ database_user }}";'
    - 'GRANT ALL ON ALL TABLES IN SCHEMA public TO "{{ database_user }}";'
    - 'GRANT ALL ON ALL SEQUENCES IN SCHEMA public TO "{{ database_user }}";'
  become: true
  become_user: 'postgres'
  when: not redeploy

- name: 'Include role http_vhost'
  include_role:
    name: 'http_vhost'
  vars:
    service_vhost_extra: true
  when: not redeploy

# ignore_configcheck prevents module from crashing
- name: 'Activate mod_wsgi on apache2'
  community.general.apache2_module:
    name: wsgi
    state: present
    ignore_configcheck: true
  notify: 'Reload httpd'
  when: not redeploy
