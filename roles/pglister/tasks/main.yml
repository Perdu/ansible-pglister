---
- name: 'Install required packages'
  package:
    state: 'latest'
    name:
      - 'python3'
      - 'libapache2-mod-wsgi-py3'
      - 'python3-pip'
      - 'python-psycopg2'
      - 'python-virtualenv'
      - 'postgresql-contrib'

- name: 'Create folder tree'
  file:
    path: '{{ service_base_path }}'
    state: 'directory'
    owner: 'list'
    group: 'www-data'
    mode: 0755

- name: 'Clone pglister repository'
  git:
    repo: '{{ repo_uri }}'
    dest: '{{ base_path }}/{{ repo_name }}'
    clone: true
    update: true
  register: repo

- name: 'Copy repository content to local folder'
  command:
    cmd: sh -c 'cp -r {{ base_path }}/{{ repo_name }}/* {{ service_base_path }}/'

- name: 'chown list:www-data pglister directory'
  file:
    path: '{{ service_base_path }}'
    owner: 'list'
    group: 'www-data'
    recurse: 'yes'

# Todo: fix issue: this fails silently on error
- name: 'Create role and database'
  command:
    cmd: psql -v ON_ERROR_STOP=0 --no-password
    stdin: |
      CREATE USER {{ database_user }};
      CREATE DATABASE {{ database_name }};
  become: true
  become_user: 'postgres'
  register: result
  failed_when: 'result.rc != 0 and not "already exists" in result.stderr'

- name: 'Install postgresql pgcrypto schema'
  postgresql_schema:
    name: 'pgcrypto'
    database: '{{ database_name }}'
  become: true
  become_user: 'postgres'

- name: 'Install postgresql crypto extension and grant usage'
  postgresql_query:
    query: '{{ item }}'
    db: '{{ database_name }}'
  loop:
    - 'CREATE EXTENSION IF NOT EXISTS pgcrypto SCHEMA pgcrypto;'
    - 'GRANT USAGE ON SCHEMA pgcrypto TO {{ database_user }}'
  become: true
  become_user: 'postgres'

- name: 'Copy pglister config'
  template:
    src: 'pglister.ini.j2'
    dest: '{{ service_base_path }}/pglister.ini'
    owner: 'list'
    group: 'www-data'
    mode: '0660'

- include_role:
    name: 'http_vhost'
  vars:
    service_vhost_extra: true
    website_repo_path: '{{ service_base_path }}/pglister.git'

- name: 'Activate mod_wsgi on apache2'
  command: '/usr/sbin/a2enmod wsgi'
  notify: 'reload httpd'

- name: 'Drop settings.py for django'
  template:
    src: 'settings.py.j2'
    dest: '{{ service_base_path }}/web/pglister/settings.py'
    owner: 'list'
    group: 'www-data'
    mode: '0660'

- name: 'install virtualenv via pip'
  pip:
    name: virtualenv
    executable: pip3
  become: true

- name: 'install required packages for django using pip'
  pip:
    name:
      - django
      - psycopg2-binary
      - requests
      - pycryptodome
      - pycryptodomex
      - crypto
    virtualenv: '{{ service_base_path }}/web/pglister/'
    virtualenv_python: python3
  become: true

- include_role:
    name: cchurch.django
  vars:
    django_app_path: '{{ service_base_path }}/web'
    django_user: list
    django_virtualenv: '{{ service_base_path }}/web/pglister'

- name: 'Install systemd services'
  command:
    cmd: './install.sh -install'
    chdir: '{{ service_base_path }}/systemd/'
  become: true
  when: repo.changed

- name: 'Start systemd services'
  command:
    cmd: './install.sh -start'
    chdir: '{{ service_base_path }}/systemd/'
  become: true
